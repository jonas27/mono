##based on Mesosphere Marathon's servicerouter.py haproxy config

global
  daemon
  maxconn 4096
  log /etc/ssl/dev/log local0
  tune.ssl.default-dh-param 2048
  ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
  ssl-default-bind-options no-sslv3 no-tls-tickets
  ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
  ssl-default-server-options no-sslv3 no-tls-tickets
  # ssl-default-bind-options ssl-min-ver TLSv1.2


defaults
  log               global
  retries           3
  maxconn           2000
  timeout connect   5s
  timeout client    50s
  timeout server    50s

frontend tls_in
  bind *:9091
  mode tcp
  # tcp-request content accept if { req.ssl_ec_ext 1 }
  # # Make routing decision
  # use_backend ssl-rsa if { req.ssl_ec_ext 0 }
  default_backend ssl-ecc
  tcp-request inspect-delay 5s

backend ssl-ecc
  mode tcp
  server ecc unix@/var/run/haproxy_ssl_ecc.sock send-proxy-v2-ssl
backend ssl-rsa
  mode tcp
  server rsa unix@/var/run/haproxy_ssl_rsa.sock send-proxy-v2-ssl

listen all-ssl
  bind unix@/var/run/haproxy_ssl_rsa.sock accept-proxy ssl crt /etc/ssl/certs/server.pem.ecdsa user nobody
  bind unix@/var/run/haproxy_ssl_rsa.sock accept-proxy ssl crt /etc/ssl/certs/server.pem.rsa user nobody
  mode http
  server backend_1 192.168.1.1:9091 check

backend api_server
  balance roundrobin
  mode tcp
  server server1 jonasburster.de
  # server server1 5.189.132.161:443 check-ssl verify none
  # additional servers here
